(defun make-rat (n d)
  (let ((g (gcd n d)))
    (cond ((and (> n 0) (> d 0)) 
           (cons (/ n g) (/ d g)))
          ((and (> n 0) (< d 0))
           (cons (- (/ n g)) (abs (/ d g))))
          ((and (< n 0) (> d 0))
           (cons (/ n g) (/ d g)))
          ((and (< n 0) (< d 0))
           (cons (abs (/ n g)) (abs (/ d g))))
          ((and (= n 0) (not (= d 0)))
           0)
          ((= d 0)
           'UNDEFINED))))
